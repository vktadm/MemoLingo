"""Create user_word association table

Revision ID: c90a3fdb7b64
Revises: 92efdf2ea402
Create Date: 2025-05-07 20:12:57.725529

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c90a3fdb7b64"
down_revision: Union[str, None] = "92efdf2ea402"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "usercategory",
        sa.Column(
            "is_creator", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["category_id"], ["category.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "category_id", name="user_category"),
    )
    op.add_column("category", sa.Column("icon", sa.String(), nullable=True))
    op.alter_column("category", "translation", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_column("userword", "t_stamp")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "userword",
        sa.Column(
            "t_stamp",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.alter_column(
        "category", "translation", existing_type=sa.VARCHAR(), nullable=False
    )
    op.drop_column("category", "icon")
    op.drop_table("usercategory")
    # ### end Alembic commands ###
